{"version":3,"sources":["components/PersonsList.jsx","components/Filter.jsx","components/Form.jsx","services/personService.jsx","components/NotificationSuccess.jsx","components/NotificationError.jsx","App.js","index.js"],"names":["PersonsList","filter","persons","deletePerson","filteredNames","console","log","map","e","name","toUpperCase","includes","push","key","id","number","onClick","Filter","handleFilterChange","value","onChange","Form","handleNameChange","handleNumberChange","newName","newNumber","addPerson","onSubmit","type","baseURL","axios","get","then","response","data","newPerson","post","person","delete","put","catch","error","NotificationSuccess","successMessage","className","NotificationError","errorMessage","App","useState","setPersons","setNewName","setNewNumber","setFilter","setSuccessMessage","setErrorMessage","useEffect","personService","initialPersons","target","preventDefault","some","find","window","confirm","returnedPerson","undefined","setTimeout","concat","updatePersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc4bec91.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst PersonsList = ({ filter, persons, deletePerson }) => {\r\n  const filteredNames = []\r\n  console.log('persons in personlist:' ,persons)\r\n  persons.map(function (e) {\r\n    if (e.name.toUpperCase().includes(filter.toUpperCase())) {\r\n      filteredNames.push(e)\r\n    }\r\n    return null\r\n  })\r\n\r\n  return (\r\n    (filter) ?\r\n      <div>\r\n        <ul>\r\n          {filteredNames.map((e) => {\r\n            return (\r\n              <div key={e.id}>\r\n                <li>{e.name} - {e.number}</li>\r\n                <button onClick={() => deletePerson(e)}>Delete</button>\r\n              </div>\r\n            )\r\n          })\r\n          }\r\n        </ul>\r\n      </div>\r\n      :\r\n      <div>\r\n        <ul>\r\n          {persons.map((e) => {\r\n            return (\r\n              <div key={e.id}>\r\n                <li >{e.name} - {e.number}</li>\r\n                <button onClick={() => deletePerson(e)}>Delete</button>\r\n              </div>\r\n            )\r\n          })\r\n          }\r\n        </ul>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default PersonsList","import React from 'react'\r\n\r\nconst Filter = ({ filter, handleFilterChange }) => {\r\n  return (\r\n    <div>\r\n      filter shown: <input value={filter} onChange={handleFilterChange} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Form = ({handleNameChange, handleNumberChange, newName, newNumber, addPerson}) => {\r\n\r\n    return (\r\n        \r\n        <form onSubmit={addPerson}>\r\n            <div>\r\n              name: <input value={newName} onChange={handleNameChange} />\r\n            </div>\r\n            <div>\r\n              number: <input value={newNumber} onChange={handleNumberChange} />\r\n            </div>\r\n            <div>\r\n              <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form","import axios from 'axios'\r\nconst baseURL = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseURL)\r\n    return request.then(response => response.data)\r\n\r\n}\r\n\r\nconst create = (newPerson) => {\r\n    const request = axios.post(baseURL, newPerson)\r\n    return request.then(response => {\r\n        return response.data   \r\n })\r\n}\r\n\r\nconst deletePerson = (person) => {\r\n    const request = axios.delete(`${baseURL}/${person.id}`)\r\n    return request.then(response => console.log(response))\r\n}\r\n\r\nconst update = (id, newPerson) => {\r\n    return axios.put(`${baseURL}/${id}`, newPerson)\r\n        .then(response => {\r\n            return response.data\r\n        }).catch(error => {\r\n            console.log('fail', error.response)\r\n        })\r\n}\r\n\r\nexport default { getAll, create, deletePerson, update }","import React from 'react'\r\nimport '../index.css'\r\n\r\nconst NotificationSuccess = ({ successMessage }) => {\r\n    return (\r\n        successMessage\r\n            ?\r\n            <div className='success'>\r\n                {successMessage}\r\n            </div>\r\n            : null\r\n    )\r\n}\r\n\r\nexport default NotificationSuccess","import React from 'react'\r\nimport '../index.css'\r\n\r\nconst NotificationError = ({ errorMessage }) => {\r\n    return (\r\n        errorMessage\r\n            ? \r\n            <div className='error'>\r\n                {errorMessage}\r\n            </div>\r\n            : \r\n            null\r\n    )\r\n}\r\n\r\nexport default NotificationError","import React, { useState, useEffect } from \"react\";\nimport PersonsList from \"./components/PersonsList\";\nimport Filter from \"./components/Filter\";\nimport Form from \"./components/Form\";\nimport personService from \"./services/personService\";\nimport NotificationSuccess from \"./components/NotificationSuccess\";\nimport NotificationError from \"./components/NotificationError\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    personService.getAll().then(initialPersons => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const handleNameChange = e => {\n    setNewName(e.target.value);\n  };\n\n  const handleNumberChange = e => {\n    setNewNumber(e.target.value);\n  };\n\n  const handleFilterChange = e => {\n    setFilter(e.target.value);\n  };\n\n  const addPerson = e => {\n    e.preventDefault();\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    };\n\n    const checkPerson = person =>\n      person.name.toUpperCase() === newPerson.name.toUpperCase();\n\n    if (persons.some(checkPerson)) {\n      let id = persons.find(\n        e => e.name.toUpperCase() === newPerson.name.toUpperCase()\n      ).id;\n\n      if (\n        window.confirm(\n          `${newPerson.name} is already in your phonebook. Would you like to assign a new number to it?`\n        )\n      ) {\n        personService\n          .update(id, newPerson)\n          .then(returnedPerson => {\n            if (returnedPerson !== undefined) {\n              setPersons(\n                persons.map(person =>\n                  person.id !== id ? person : returnedPerson\n                )\n              );\n              setSuccessMessage(\n                `${returnedPerson.name} was successfully updated!`\n              );\n              setTimeout(() => {\n                setSuccessMessage(null);\n              }, 5000);\n              setNewName(\"\");\n              setNewNumber(\"\");\n            } else {\n              setErrorMessage(\n                `Person ${newPerson.name} was already removed from the server`\n              );\n              setTimeout(() => {\n                setErrorMessage(null);\n              }, 5000);\n              setPersons(persons.filter(e => e.id !== id));\n              setNewName(\"\");\n              setNewNumber(\"\");\n            }\n          })\n          .catch(error => {\n            console.log(\"error:\", error);\n            setErrorMessage(\n              `Person ${newPerson.name} was already removed from the server`\n            );\n            setTimeout(() => {\n              setErrorMessage(null);\n            }, 5000);\n            setNewName(\"\");\n            setNewNumber(\"\");\n          });\n      } else {\n        return null;\n      }\n    } else {\n      personService\n        .create(newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson));\n          setSuccessMessage(\n            `${returnedPerson.name} was successfully added to Phonebook!`\n          );\n          setTimeout(() => {\n            setSuccessMessage(null);\n          }, 5000);\n          setNewName(\"\");\n          setNewNumber(\"\");\n        })\n        .catch(error => {\n          console.log(\"error data:\", error.response.data);\n          setErrorMessage(error.response.data.error);\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 5000);\n          setNewName(\"\");\n          setNewNumber(\"\");\n        });\n    }\n  };\n\n  const deletePerson = person => {\n    if (window.confirm(`Delete ${person.name} ?`)) {\n      personService.deletePerson(person);\n      let updatePersons = persons.filter(e => e.id !== person.id);\n      setPersons(updatePersons);\n      setSuccessMessage(\n        `${person.name} was successfully erased from the Phonebook!`\n      );\n      setTimeout(() => {\n        setSuccessMessage(null);\n      }, 5000);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <NotificationError errorMessage={errorMessage} />\n      <NotificationSuccess successMessage={successMessage} />\n      <div>\n        <Filter filter={filter} handleFilterChange={handleFilterChange} />\n      </div>\n      <h2>Add new contact</h2>\n      <Form\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        newName={newName}\n        newNumber={newNumber}\n        addPerson={addPerson}\n      />\n      <h2>Numbers</h2>\n      <PersonsList\n        filter={filter}\n        persons={persons}\n        deletePerson={deletePerson}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}